plugins {
  alias(libs.plugins.android.application)
  alias(libs.plugins.kotlin.android)
  id 'com.google.dagger.hilt.android'
  id 'kotlin-android'
  id 'kotlin-parcelize'
  id 'com.google.devtools.ksp'
  alias(libs.plugins.jetbrains.kotlin.serialization)
  alias(libs.plugins.compose.compiler)
}

android {
  namespace 'me.spica27.spicamusic'
  compileSdk 36

  defaultConfig {
    applicationId "me.spica27.spicamusic"
    minSdk 24
    targetSdk 35
    versionCode 2
    versionName "1.1.1"

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    vectorDrawables {
      useSupportLibrary true
    }
  }

  signingConfigs {
    signingConfig {
      storeFile rootProject.file("key.jks")
      storePassword 'SPICa27'
      keyAlias 'wuqi'
      keyPassword 'SPICa27'
    }
  }

  lintOptions {
    checkReleaseBuilds false
    abortOnError false
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.signingConfig
    }
    debug {
      signingConfig signingConfigs.signingConfig
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = '1.8'
  }
  buildFeatures {
    compose true
  }
  buildFeatures {
    //    aidl=true
    buildConfig = true
  }
  sourceSets {
    main {
      jniLibs.srcDirs = ['libs']
    }
  }
  composeOptions {
    kotlinCompilerExtensionVersion '1.5.7'
  }
  //  kapt {
  //    correctErrorTypes = true
  //  }
  packaging {
    resources {
      excludes += '/META-INF/{AL2.0,LGPL2.1}'
    }
  }
}

dependencies {
  implementation fileTree(dir: "libs", include: ["*.jar"])
  //  implementation project(":extension-flac2120")
  implementation libs.androidx.core.ktx
  implementation libs.androidx.lifecycle.runtime.ktx
  implementation libs.androidx.activity.compose
  implementation platform(libs.androidx.compose.bom)
  implementation libs.androidx.ui
  implementation libs.androidx.ui.graphics
  implementation libs.androidx.ui.tooling.preview
  implementation libs.androidx.material3
  implementation libs.androidx.constraintlayout
  testImplementation libs.junit
  androidTestImplementation libs.androidx.junit
  androidTestImplementation libs.androidx.espresso.core
  androidTestImplementation platform(libs.androidx.compose.bom)
  androidTestImplementation libs.androidx.ui.test.junit4
  debugImplementation libs.androidx.ui.tooling
  debugImplementation libs.androidx.ui.test.manifest
  implementation(libs.coil.compose)
  implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.9.1")

  //  implementation 'com.github.EspoirX:StarrySky:v2.6.9'

  def room_version = "2.7.2"
  implementation("androidx.room:room-runtime:$room_version")
  ksp("androidx.room:room-compiler:$room_version")
  implementation("androidx.room:room-ktx:$room_version")

  /** hilt **/
  implementation libs.hilt.android
  ksp libs.hilt.compiler
  implementation libs.androidx.hilt.navigation.compose

  implementation libs.androidx.datastore.preferences

  implementation libs.timber
  implementation libs.noise

  def accompanistVersion = "0.36.0"
  implementation(libs.accompanist.permissions)

  implementation project(":decoder_flac")

  implementation libs.kotlinx.serialization.core
  implementation libs.androidx.adaptive
  implementation libs.androidx.adaptive.layout
  implementation libs.androidx.adaptive.navigation
  implementation libs.androidx.lifecycle.viewmodel.navigation3
  implementation libs.androidx.navigation3.runtime
  implementation libs.androidx.navigation3.ui


  // 播放器
  def media3_version = "1.4.1"
  // For media playback using ExoPlayer
  implementation libs.androidx.media3.exoplayer
  //    implementation 'com.google.android.exoplayer:exoplayer-core:2.X.X'
  implementation libs.androidx.media
  implementation 'com.github.lincollincol:amplituda:2.3.0'
  // DSP 处理
}